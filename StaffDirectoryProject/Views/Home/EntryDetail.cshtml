@model CorgiDev.StaffDirectoryProject.Models.Entry
@using CorgiDev.StaffDirectoryProject.Models

<div class="row">

    <div class="col-md-6">
        @*TODO: Edit fields to just display the values for the selected entry. No need to have editable fields.*@

        @*Employee ID for Entry*@
        <div class="form-group">
            @Html.LabelFor(m => m.EmployeeId, new { @class = "control-label" })
            @Html.TextBoxFor(m => m.EmployeeId, new { @class = "form-control" })
        </div>

        @*Form field to enter First Name for Entry*@
        <div class="form-group">
            @Html.LabelFor(m => m.FirstName, new { @class = "control-label" })
            @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
        </div>

        @*Form field to enter Last Name for Entry*@
        <div class="form-group">
            @Html.LabelFor(m => m.LastName, new { @class = "control-label" })
            @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
        </div>

        @*Form field to enter Job Title for Entry*@
        <div class="form-group">
            @Html.LabelFor(m => m.JobTitle, new { @class = "control-label" })
            @Html.TextBoxFor(m => m.JobTitle, new { @class = "form-control" })
        </div>

        @*Form field to enter Department Name for Entry*@
        <div class="form-group">
            @Html.LabelFor(m => m.DepartmentId, new { @class = "control-label" })
            @Html.DropDownListFor(m => m.DepartmentId,
                (SelectList)ViewBag.DepartmentsSelectListItems, "", new { @class = "form-control" })
        </div>

        @*Form field to enter Phone Number for Entry*@
        <div class="form-group">
            @Html.LabelFor(m => m.PhoneNumber, new { @class = "control-label" })
            @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control" })
        </div>

        @*Form field to enter E-Mail Address for Entry*@
        <div class="form-group">
            @Html.LabelFor(m => m.EmailAddress, new { @class = "control-label" })
            @Html.TextBoxFor(m => m.EmailAddress, new { @class = "form-control" })
        </div>

        @*Form field to select Skill for Entry*@
        <div class="form-group">
            @Html.LabelFor(m => m.SkillId, new { @class = "control-label" })
            @Html.DropDownListFor(m => m.SkillId,
                (SelectList)ViewBag.SkillsSelectListItems, "", new { @class = "form-control" })
        </div>

        @*Form field to enter Notes for Entry*@
        <div class="form-group">
            @Html.LabelFor(m => m.Notes, new { @class = "control-label" })
            @Html.TextAreaFor(m => m.Notes, 14, 20, new { @class = "form-control" })
        </div>

        TODO: Edit the code to make this a return to home button, instead of a cancel button.
        @*Return to Home Button*@
        <div class="col-md-12">
            <div class="pad-top">
                <a href="@Url.Action("Index")" class="btn btn-warning btn-lg">
                    <span class="glyphicon glyphicon-remove"></span> Return Home
                </a>
            </div>
        </div>

    </div>
</div>

}